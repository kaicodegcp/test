Required Fixes
To ensure the TLS cert is trusted by the CDS installer and Kubernetes API:

1. Update the OpenShift openshift-config ConfigMap
You need to patch or replace the OpenShift trusted CA bundle with your new domain.crt.

bash
Copy
Edit
oc create configmap custom-ca --from-file=ca-bundle.crt=domain.crt -n openshift-config --dry-run=client -o yaml | oc apply -f -
Then, patch the cluster to use it:

bash
Copy
Edit
oc patch proxy/cluster --type=merge -p \
'{"spec":{"trustedCA":{"name":"custom-ca"}}}'
2. Restart Affected Pods (Optional but Recommended)
After patching the CA, restart pods like vault-0 or others that rely on TLS verification:

bash
Copy
Edit
oc delete pod vault-0 -n <your-namespace>
3. Verify the cert was picked up
bash
Copy
Edit
oc get proxy/cluster -o jsonpath='{.spec.trustedCA.name}'
Should return: custom-ca

4. Verify SAN entries in your domain.crt
Ensure your domain.crt includes all SANs (Subject Alternative Names) such as:

FQDN (*.nam.nsroot.net)

Short names (sd-wv58-kflz)

Kubernetes API domains (e.g., api.cluster.local if used)

To verify:

bash
Copy
Edit
openssl x509 -in domain.crt -text -noout | grep -A1 "Subject Alternative Name"
Optional: Configure via Secret (if CDS expects Secret instead of ConfigMap)
If the CDS Helm chart or service references a Kubernetes Secret instead, you may need:

bash
Copy
Edit
oc create secret tls cdp-tls-secret \
  --cert=domain.crt --key=domain.key \
  -n <cdp-namespace>




===========================
domain.crt ‚Üí /opt/registry/certs/domain.crt

domain.key ‚Üí /opt/registry/certs/domain.key

ca-cert.pem ‚Üí /opt/registry/certs/ca.crt

‚úÖ Since you regenerated your TLS certs, you must:
1. Update the files used by the Docker registry container:
bash
Copy
Edit
sudo cp /home/gpabadmin/.../domain.crt /opt/registry/certs/domain.crt
sudo cp /home/gpabadmin/.../domain.key /opt/registry/certs/domain.key
sudo cp /home/gpabadmin/.../ca-cert.pem /opt/registry/certs/ca.crt
2. Restart the Docker registry container
First, find the container ID or name:

bash
Copy
Edit
docker ps | grep registry
Then restart:

bash
Copy
Edit
docker restart <registry_container_name_or_id>
If you're unsure of the name, it's probably secure-registry or similar.

üîê Optional: If You're Still Using registry:2 Image
Make sure your Docker run command includes these correctly:

bash
Copy
Edit
-e REGISTRY_HTTP_TLS_CERTIFICATE=/certs/domain.crt \
-e REGISTRY_HTTP_TLS_KEY=/certs/domain.key
If not, stop and re-run the container with the correct paths and updated certs.

‚úÖ After Restart ‚Äî Test Access
From the same machine:

bash
Copy
Edit
curl -u admin:yourpassword https://sd-wv58-kflz.nam.nsroot.net:5000/v2/_catalog --cacert /opt/registry/certs/ca.crt
Expected output:

json
Copy
Edit
{"repositories":[]}
(or a list of image repos)

‚úÖ Also: Trust Cert on OpenShift Nodes
Each OpenShift node pulling from this registry must trust the new ca.crt:

bash
Copy
Edit
# On each node
cp /opt/registry/certs/ca.crt /etc/pki/ca-trust/source/anchors/
update-ca-trust extract
