docker images --format "{{.Repository}}:{{.Tag}}" | grep 36842304766.dkr.ecr

for img in $(docker images --format "{{.Repository}}:{{.Tag}}"); do
  if [[ "$img" == 36842304766.dkr.ecr.us-west-2.amazonaws.com/* ]]; then
    echo "Removing image: $img"
    docker rmi -f "$img"
  fi
done

for img in $(docker images --format "{{.Repository}}:{{.Tag}}"); do
  case "$img" in
    36842304766.dkr.ecr.us-west-2.amazonaws.com/*)
      echo "🗑️ Removing image: $img"
      docker rmi -f "$img"
      ;;
  esac
done

Full Working Method (No Pipes in Loop)
Step 1: Save all image names to a file
bash
Copy
Edit
docker images --format "{{.Repository}}:{{.Tag}}" > /tmp/all-docker-images.txt
Step 2: Extract only ECR images
bash
Copy
Edit
grep '^36842304766.dkr.ecr.us-west-2.amazonaws.com/' /tmp/all-docker-images.txt > /tmp/ecr-to-delete.txt
Step 3: Delete all ECR images using a while loop
bash
Copy
Edit
while read img; do
  echo "🗑️ Removing: $img"
  docker rmi -f "$img"
done < /tmp/ecr-to-delete.txt



while read image; do
  # Extract path after the registry (remove the "36842304766.dkr.ecr.us-west-2.amazonaws.com/" part)
  short_name=$(echo "$image" | sed 's|36842304766.dkr.ecr.us-west-2.amazonaws.com/||')

  # Construct new image name
  new_image="sd-wv58-kflz.nam.nsroot.net:5000/$short_name"

  echo "🔄 Retagging: $image → $new_image"
  docker tag "$image" "$new_image"

  echo "📤 Pushing: $new_image"
  docker push "$new_image"
done < /tmp/ecr-to-delete.txt




while read old_image; do
  # Remove embedded ECR path after local registry
  new_image=$(echo "$old_image" | sed 's|/36842304766.dkr.ecr.us-west-2.amazonaws.com||')

  echo "🔄 Retagging:"
  echo "FROM: $old_image"
  echo "  TO: $new_image"

  docker tag "$old_image" "$new_image"
  docker push "$new_image"
done < /tmp/ecr-to-delete.txt

