 Final Fix Steps
ðŸ”¹ 1. Identify the Actual SA Used by the Failing Pod
Run this again and capture the actual service account:

bash
Copy
Edit
oc get pod -n cdp2 -o jsonpath='{range .items[*]}{@.metadata.name}: {@.spec.serviceAccountName}{"\n"}{end}'
Look for the pod involved in the Vault install (e.g., vault-0, cdp-preinstall, etc.)

ðŸ”¹ 2. Assign Required Role to That Service Account
Now use that real SA (say default or vault-auth) and run:

bash
Copy
Edit
oc adm policy add-role-to-user view system:serviceaccount:cdp2:vault-auth -n cdp2
Or if Vault is using default SA:

bash
Copy
Edit
oc adm policy add-role-to-user view system:serviceaccount:cdp2:default -n cdp2
ðŸ”¹ 3. [Optional] If view is not enough, assign edit or custom drs ClusterRole
bash
Copy
Edit
oc adm policy add-cluster-role-to-user drs system:serviceaccount:cdp2:vault-auth
Replace drs with the name shown in cloudera-cdp2-drs or k8s-cdp2-drs depending on which fits your Vault flow policy.

ðŸ”¹ 4. Restart Pod or Retry the Vault Workflow
bash
Copy
Edit
oc delete pod <vault-pod-name> -n cdp2



=============
Step-by-Step Manual Vault Login Test (Kubernetes Auth)
ðŸ”¹ 1. Extract the JWT Token from a Pod
bash
Copy
Edit
oc get pod -n cdp2
Pick a running pod using the correct service account (e.g., vault-auth or default).

Then:

bash
Copy
Edit
oc exec -n cdp2 <pod-name> -- cat /var/run/secrets/kubernetes.io/serviceaccount/token > jwt-token.txt
ðŸ”¹ 2. Create the Login Payload
Create a file called vault-login.json:

json
Copy
Edit
{
  "jwt": "<paste contents of jwt-token.txt here>",
  "role": "cdp2-role"
}
Replace "cdp2-role" with the name of the Vault Kubernetes role that was configured for this workflow.

ðŸ”¹ 3. Send the API Request Using curl
bash
Copy
Edit
curl -v -k \
  --cert /etc/docker/certs.d/sd-wv58-kflz.nam.nsroot.net:5000/domain.crt \
  --key /etc/docker/certs.d/sd-wv58-kflz.nam.nsroot.net:5000/domain.key \
  -X POST https://vault-cdp2-vault.apps.mlab-ctgitdcai03d.ecs.dyn.nsroot.net/v1/auth/cdp2/login \
  -H "Content-Type: application/json" \
  -d @vault-login.json

