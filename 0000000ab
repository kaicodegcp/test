Step-by-Step Deployment
1. Create a ConfigMap with the domain.crt
bash
Copy
Edit
oc create configmap docker-registry-cert \
  --from-file=domain.crt=/opt/registry/certs/domain.crt \
  -n openshift-config
2. Create a DaemonSet YAML to distribute the cert
Save the following as trust-cert-daemonset.yaml:

yaml
Copy
Edit
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cert-installer
  namespace: openshift-config
spec:
  selector:
    matchLabels:
      name: cert-installer
  template:
    metadata:
      labels:
        name: cert-installer
    spec:
      hostPID: true
      containers:
      - name: install-cert
        image: registry.access.redhat.com/ubi8/ubi
        command: ["/bin/bash", "-c"]
        args:
          - |
            set -ex
            cp /certs/domain.crt /host/etc/docker/certs.d/sd-wv58-kflz.nam.nsroot.net:5000/ca.crt
            cp /certs/domain.crt /host/etc/pki/ca-trust/source/anchors/domain.crt
            chroot /host update-ca-trust extract
            chroot /host systemctl restart crio
            sleep 300
        securityContext:
          privileged: true
        volumeMounts:
        - name: certs
          mountPath: /certs
        - name: host-etc-docker
          mountPath: /host/etc/docker
        - name: host-etc-pki
          mountPath: /host/etc/pki
        - name: host-sysroot
          mountPath: /host
      volumes:
      - name: certs
        configMap:
          name: docker-registry-cert
      - name: host-etc-docker
        hostPath:
          path: /etc/docker
      - name: host-etc-pki
        hostPath:
          path: /etc/pki
      - name: host-sysroot
        hostPath:
          path: /
      tolerations:
      - operator: Exists
      restartPolicy: Always
3. Apply the DaemonSet
bash
Copy
Edit
oc apply -f trust-cert-daemonset.yaml
It will run once on each node, copy the cert, restart crio, and wait.

4. Verify and Cleanup
‚úÖ Check certs:
bash
Copy
Edit
oc debug node/<node-name>
chroot /host ls /etc/docker/certs.d/sd-wv58-kflz.nam.nsroot.net:5000/
‚úÖ Then delete DaemonSet:
bash
Copy
Edit
oc delete ds cert-installer -n openshift-config
oc delete configmap docker-registry-cert -n openshift-config
‚úÖ After That
Re-deploy your failing pod:

bash
Copy
Edit
oc delete pod vault-0 -n nacho-cds
Image pull should succeed without TLS error.




---------------------

f SSH is NOT allowed:
Use the internal Cloudera Vault image for DaemonSet cert fix.

‚úî Action:
Update your trust-cert-daemonset.yaml to use this working image:

yaml
Copy
Edit
image: sd-wv58-kflz.nam.nsroot.net:5000/cdp-private/cloudera_thirdparty/vault:1.17.2-r0
Re-apply:

bash
Copy
Edit
oc delete ds cert-installer -n openshift-config
oc apply -f trust-cert-daemonset.yaml
This will:

Copy the cert to /etc/docker/certs.d/...

Add cert to /etc/pki/ca-trust/source/anchors/

Run update-ca-trust extract

Restart crio on all nodes

üîê 2. Ensure Pull Secret is Set for Image Authentication
‚úî Action:
If your registry requires auth (which it does), create a Docker registry secret:

bash
Copy
Edit
oc create secret docker-registry my-registry-secret \
  --docker-server=sd-wv58-kflz.nam.nsroot.net:5000 \
  --docker-username=admin \
  --docker-password=admin \
  --docker-email=unused@example.com \
  -n nacho
Then patch the service account:

bash
Copy
Edit
oc patch serviceaccount default -p '{"imagePullSecrets":[{"name":"my-registry-secret"}]}' -n nacho
Repeat for nacho-cds if needed.

üß™ 3. Deploy the vault-test Pod
‚úî Action:
bash
Copy
Edit
oc run vault-test \
  --image=sd-wv58-kflz.nam.nsroot.net:5000/cdp-private/cloudera_thirdparty/vault:1.17.2-r0 \
  --restart=Never \
  -n nacho
If you're using nacho-cds namespace instead:

bash
Copy
Edit
oc run vault-test --image=... -n nacho-cds
üîÅ 4. Validate Pod
‚úî Action:
bash
Copy
Edit
oc get pods -n nacho -w
Wait for STATUS to become Completed or Running.

If needed:

bash
Copy
Edit
oc describe pod vault-test -n nacho
‚úÖ Optional Clean-Up
After success:

bash
Copy
Edit
oc delete ds cert-installer -n openshift-config
oc delete configmap docker-registry-cert -n openshift-config
