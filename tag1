docker images | grep amazonaws.com | while read repo tag img_id rest; do
  # Extract just the 'cloudera/...' part from the full path
  short_name=$(echo "$repo" | sed -n 's|.*/cloudera[_/]|\0|p' | sed 's|.*/||')
  namespace=$(echo "$repo" | grep -o 'cloudera[_/][^ ]*' | sed 's|cloudera[_/]||')
  clean_repo="cloudera_${namespace:-unknown}"

  final_tag="sd-wv58-kflz.nam.nsroot.net:5000/$clean_repo:$tag"

  echo "🔖 Tagging $repo:$tag → $final_tag"
  docker tag "$repo:$tag" "$final_tag"
done

docker images | grep sd-wv58-kflz.nam.nsroot.net | while read repo tag img_id rest; do
  echo "⬆️  Pushing $repo:$tag"
  docker push $repo:$tag
done


You can even automate this:

bash
Copy
Edit
docker images | awk '{print $1":"$2}' | grep amazonaws.com | while read img; do
  echo "🧹 Removing $img"
  docker rmi "$img"
done
🧾 Final Tip:
After cleanup, validate:

bash
Copy
Edit
docker images | grep sd-wv58
This should show only clean, internal-registry-ready tags like:

bash
Copy
Edit
sd-wv58-kflz.nam.nsroot.net:5000/cloudera_cdsw/cron
