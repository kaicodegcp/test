Manual vault-0 YAML (cdp namespace)
Save this as vault-manual.yaml:

yaml
Copy
Edit
apiVersion: v1
kind: Namespace
metadata:
  name: cdp
---
apiVersion: v1
kind: Service
metadata:
  name: vault
  namespace: cdp
spec:
  clusterIP: None
  selector:
    app: vault
  ports:
    - port: 8200
      targetPort: 8200
      name: http
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vault-sa
  namespace: cdp
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: vault
  namespace: cdp
spec:
  serviceName: vault
  replicas: 1
  selector:
    matchLabels:
      app: vault
  template:
    metadata:
      labels:
        app: vault
    spec:
      serviceAccountName: vault-sa
      containers:
        - name: vault
          image: sd-wv58-kflz.nam.nsroot.net:5000/cdp-private/cloudera_thirdparty/vault:1.17.2-r0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8200
          volumeMounts:
            - name: vault-storage
              mountPath: /vault/file
  volumeClaimTemplates:
    - metadata:
        name: vault-storage
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 10Gi
        storageClassName: rook-ceph-block
‚úÖ How to Deploy Vault Manually
Apply the YAML:

bash
Copy
Edit
oc apply -f vault-manual.yaml
Watch Vault Pod:

bash
Copy
Edit
oc get pods -n cdp -w
Check Logs:

bash
Copy
Edit
oc logs -f vault-0 -n cdp
Check PVC Status:

bash
Copy
Edit
oc get pvc -n cdp



Fix: Delete and Recreate the StatefulSet
Since volumeClaimTemplates is immutable, do this:

bash
Copy
Edit
oc delete statefulset vault -n cdp
oc delete pvc vault-storage-vault-0 -n cdp
oc apply -f vault-manual.yaml
üîÅ This recreates the StatefulSet and PVC using the new sc-ontap-nas storage class.

üü¢ 2. Docker Credentials ‚Äì Needed?
Since your image was already used successfully in the first attempt (vault-0 pulled image earlier), Docker credentials are already working.

‚úÖ No need to patch anything further for image pull if:

bash
Copy
Edit
vault pod shows image: sd-wv58-kflz.nam.nsroot.net:5000/...
If ever needed in another project, you can create the pull secret like:

bash
Copy
Edit
oc create secret docker-registry regcred \
  --docker-server=sd-wv58-kflz.nam.nsroot.net:5000 \
  --docker-username=admin \
  --docker-password=admin \
  --docker-email=dummy@example.com \
  -n cdp
And attach it to the service account:

bash
Copy
Edit
oc patch serviceaccount vault-sa -n cdp -p '{"imagePullSecrets": [{"name": "regcred"}]}'



curl -v https://sd-wv58-kflz.nam.nsroot.net:5000/v2/ --cacert /etc/pki/ca-trust/source/anchors/domain.crt





Fix: Patch the ImagePullSecret Correctly
You already created a Docker registry secret named regcred:

bash
Copy
Edit
oc create secret docker-registry regcred \
  --docker-server=sd-wv58-kflz.nam.nsroot.net:5000 \
  --docker-username=admin \
  --docker-password=admin \
  --docker-email=dummy@example.com \
  -n cdp
You also patched the service account:

bash
Copy
Edit
oc patch serviceaccount vault-sa -n cdp -p '{"imagePullSecrets": [{"name": "regcred"}]}'
Let‚Äôs verify both:

üîç Step 1: Verify the Secret Is Attached
bash
Copy
Edit
oc get serviceaccount vault-sa -n cdp -o yaml
You should see:

yaml
Copy
Edit
imagePullSecrets:
- name: regcred
üîç Step 2: Verify Secret Format
Run:

bash
Copy
Edit
oc get secret regcred -n cdp -o yaml
Confirm:

type: kubernetes.io/dockerconfigjson

data:.dockerconfigjson exists

If the format is incorrect, recreate it using:

bash
Copy
Edit
oc delete secret regcred -n cdp

oc create secret docker-registry regcred \
  --docker-server=sd-wv58-kflz.nam.nsroot.net:5000 \
  --docker-username=admin \
  --docker-password=admin \
  --docker-email=dummy@example.com \
  -n cdp
Then restart the pod:

bash
Copy
Edit
oc delete pod vault-0 -n cdp

